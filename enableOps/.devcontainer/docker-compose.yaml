version: "3.8"

networks:
  proxy:
    external: true
    name: proxy

services:
  web:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        VARIANT: 3.9-bullseye
        NODE_VERSION: "16"

    volumes:
      - ..:/workspace:cached
      - ~/.kube:/home/vscode/.kube:cached
      - ~/env-injector:/home/vscode/env-injector:cached
      - ~/.scripts/1penv.sh:/home/vscode/1penv.sh:cached
    command: sleep infinity

    network_mode: service:db

    labels:
      - traefik.enable=true
      - traefik.http.routers.enableops-api.rule=Host(`api.enableops.lol`)
      - traefik.http.routers.enableops-api.entrypoints=web,web-secure
      - traefik.http.routers.enableops-api.tls=true
      - traefik.http.services.enableops-api.loadbalancer.server.port=8000
      - traefik.tcp.routers.enableops-db.rule=HostSNI(`*`)
      - traefik.tcp.routers.enableops-db.entrypoints=postgres
      - traefik.tcp.services.enableops-db.loadbalancer.server.port=5432
      - traefik.http.routers.enableops-website.rule=Host(`web.enableops.lol`)
      - traefik.http.routers.enableops-website.tls=true
      - traefik.http.routers.enableops-website.entrypoints=web,web-secure,debug
      - traefik.http.services.enableops-website.loadbalancer.server.port=3000

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

    networks:
      - proxy

volumes:
  postgres-data: null
